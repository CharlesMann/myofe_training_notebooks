# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _function.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_function')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_function')
    _function = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_function', [dirname(__file__)])
        except ImportError:
            import _function
            return _function
        try:
            _mod = imp.load_module('_function', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _function = swig_import_helper()
    del swig_import_helper
else:
    import _function
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


SHARED_PTR_DISOWN = _function.SHARED_PTR_DISOWN

def _attach_base_to_numpy_array(obj, owner):
    return _function._attach_base_to_numpy_array(obj, owner)
_attach_base_to_numpy_array = _function._attach_base_to_numpy_array

def dolfin_swigversion():
    return _function.dolfin_swigversion()
dolfin_swigversion = _function.dolfin_swigversion

def dolfin_pythonversion():
    return _function.dolfin_pythonversion()
dolfin_pythonversion = _function.dolfin_pythonversion

tmp = hex(dolfin_swigversion())
__swigversion__ = "%d.%d.%d"%(tuple(map(int, [tmp[-5], tmp[-3], tmp[-2:]])))
tmp = hex(dolfin_pythonversion())
__pythonversion__ = "%d.%d.%d"%(tuple(map(lambda x: int(x,16), [tmp[2], tmp[3:5], tmp[5:7]])))
del tmp, dolfin_pythonversion, dolfin_swigversion


def has_petsc4py():
    return _function.has_petsc4py()
has_petsc4py = _function.has_petsc4py

def has_slepc4py():
    return _function.has_slepc4py()
has_slepc4py = _function.has_slepc4py
UFC_VERSION_MAJOR = _function.UFC_VERSION_MAJOR
UFC_VERSION_MINOR = _function.UFC_VERSION_MINOR
UFC_VERSION_MAINTENANCE = _function.UFC_VERSION_MAINTENANCE
UFC_VERSION_RELEASE = _function.UFC_VERSION_RELEASE
ufc_shape_interval = _function.ufc_shape_interval
ufc_shape_triangle = _function.ufc_shape_triangle
ufc_shape_quadrilateral = _function.ufc_shape_quadrilateral
ufc_shape_tetrahedron = _function.ufc_shape_tetrahedron
ufc_shape_hexahedron = _function.ufc_shape_hexahedron
class ufc_cell(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _function.delete_ufc_cell
    cell_shape = _swig_property(_function.ufc_cell_cell_shape_get, _function.ufc_cell_cell_shape_set)
    topological_dimension = _swig_property(_function.ufc_cell_topological_dimension_get, _function.ufc_cell_topological_dimension_set)
    geometric_dimension = _swig_property(_function.ufc_cell_geometric_dimension_get, _function.ufc_cell_geometric_dimension_set)
    index = _swig_property(_function.ufc_cell_index_get, _function.ufc_cell_index_set)
    local_facet = _swig_property(_function.ufc_cell_local_facet_get, _function.ufc_cell_local_facet_set)
    mesh_identifier = _swig_property(_function.ufc_cell_mesh_identifier_get, _function.ufc_cell_mesh_identifier_set)
ufc_cell_swigregister = _function.ufc_cell_swigregister
ufc_cell_swigregister(ufc_cell)
cvar = _function.cvar
UFC_VERSION = cvar.UFC_VERSION

class ufc_function(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _function.delete_ufc_function
ufc_function_swigregister = _function.ufc_function_swigregister
ufc_function_swigregister(ufc_function)

class ufc_finite_element(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _function.delete_ufc_finite_element
ufc_finite_element_swigregister = _function.ufc_finite_element_swigregister
ufc_finite_element_swigregister(ufc_finite_element)

class ufc_dofmap(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _function.delete_ufc_dofmap
ufc_dofmap_swigregister = _function.ufc_dofmap_swigregister
ufc_dofmap_swigregister(ufc_dofmap)

class ufc_coordinate_mapping(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _function.delete_ufc_coordinate_mapping
ufc_coordinate_mapping_swigregister = _function.ufc_coordinate_mapping_swigregister
ufc_coordinate_mapping_swigregister(ufc_coordinate_mapping)

class ufc_form(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _function.delete_ufc_form
ufc_form_swigregister = _function.ufc_form_swigregister
ufc_form_swigregister(ufc_form)


def make_ufc_finite_element(*args):
    return _function.make_ufc_finite_element(*args)
make_ufc_finite_element = _function.make_ufc_finite_element

def make_ufc_dofmap(*args):
    return _function.make_ufc_dofmap(*args)
make_ufc_dofmap = _function.make_ufc_dofmap

def make_ufc_coordinate_mapping(*args):
    return _function.make_ufc_coordinate_mapping(*args)
make_ufc_coordinate_mapping = _function.make_ufc_coordinate_mapping

def make_ufc_form(*args):
    return _function.make_ufc_form(*args)
make_ufc_form = _function.make_ufc_form
import common
class HierarchicalMesh(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2):
        _function.HierarchicalMesh_swiginit(self, _function.new_HierarchicalMesh(arg2))
    __swig_destroy__ = _function.delete_HierarchicalMesh
HierarchicalMesh.depth = new_instancemethod(_function.HierarchicalMesh_depth, None, HierarchicalMesh)
HierarchicalMesh.has_parent = new_instancemethod(_function.HierarchicalMesh_has_parent, None, HierarchicalMesh)
HierarchicalMesh.has_child = new_instancemethod(_function.HierarchicalMesh_has_child, None, HierarchicalMesh)
HierarchicalMesh._parent = new_instancemethod(_function.HierarchicalMesh__parent, None, HierarchicalMesh)
HierarchicalMesh._child = new_instancemethod(_function.HierarchicalMesh__child, None, HierarchicalMesh)
HierarchicalMesh._root_node = new_instancemethod(_function.HierarchicalMesh__root_node, None, HierarchicalMesh)
HierarchicalMesh._leaf_node = new_instancemethod(_function.HierarchicalMesh__leaf_node, None, HierarchicalMesh)
HierarchicalMesh.set_parent = new_instancemethod(_function.HierarchicalMesh_set_parent, None, HierarchicalMesh)
HierarchicalMesh.clear_child = new_instancemethod(_function.HierarchicalMesh_clear_child, None, HierarchicalMesh)
HierarchicalMesh.set_child = new_instancemethod(_function.HierarchicalMesh_set_child, None, HierarchicalMesh)
HierarchicalMesh._debug = new_instancemethod(_function.HierarchicalMesh__debug, None, HierarchicalMesh)
HierarchicalMesh_swigregister = _function.HierarchicalMesh_swigregister
HierarchicalMesh_swigregister(HierarchicalMesh)

import mesh
import la
class HierarchicalFunctionSpace(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2):
        _function.HierarchicalFunctionSpace_swiginit(self, _function.new_HierarchicalFunctionSpace(arg2))
    __swig_destroy__ = _function.delete_HierarchicalFunctionSpace
HierarchicalFunctionSpace.depth = new_instancemethod(_function.HierarchicalFunctionSpace_depth, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.has_parent = new_instancemethod(_function.HierarchicalFunctionSpace_has_parent, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.has_child = new_instancemethod(_function.HierarchicalFunctionSpace_has_child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._parent = new_instancemethod(_function.HierarchicalFunctionSpace__parent, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._child = new_instancemethod(_function.HierarchicalFunctionSpace__child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._root_node = new_instancemethod(_function.HierarchicalFunctionSpace__root_node, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._leaf_node = new_instancemethod(_function.HierarchicalFunctionSpace__leaf_node, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.set_parent = new_instancemethod(_function.HierarchicalFunctionSpace_set_parent, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.clear_child = new_instancemethod(_function.HierarchicalFunctionSpace_clear_child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.set_child = new_instancemethod(_function.HierarchicalFunctionSpace_set_child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._debug = new_instancemethod(_function.HierarchicalFunctionSpace__debug, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace_swigregister = _function.HierarchicalFunctionSpace_swigregister
HierarchicalFunctionSpace_swigregister(HierarchicalFunctionSpace)

class HierarchicalFunction(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2):
        _function.HierarchicalFunction_swiginit(self, _function.new_HierarchicalFunction(arg2))
    __swig_destroy__ = _function.delete_HierarchicalFunction
HierarchicalFunction.depth = new_instancemethod(_function.HierarchicalFunction_depth, None, HierarchicalFunction)
HierarchicalFunction.has_parent = new_instancemethod(_function.HierarchicalFunction_has_parent, None, HierarchicalFunction)
HierarchicalFunction.has_child = new_instancemethod(_function.HierarchicalFunction_has_child, None, HierarchicalFunction)
HierarchicalFunction._parent = new_instancemethod(_function.HierarchicalFunction__parent, None, HierarchicalFunction)
HierarchicalFunction._child = new_instancemethod(_function.HierarchicalFunction__child, None, HierarchicalFunction)
HierarchicalFunction._root_node = new_instancemethod(_function.HierarchicalFunction__root_node, None, HierarchicalFunction)
HierarchicalFunction._leaf_node = new_instancemethod(_function.HierarchicalFunction__leaf_node, None, HierarchicalFunction)
HierarchicalFunction.set_parent = new_instancemethod(_function.HierarchicalFunction_set_parent, None, HierarchicalFunction)
HierarchicalFunction.clear_child = new_instancemethod(_function.HierarchicalFunction_clear_child, None, HierarchicalFunction)
HierarchicalFunction.set_child = new_instancemethod(_function.HierarchicalFunction_set_child, None, HierarchicalFunction)
HierarchicalFunction._debug = new_instancemethod(_function.HierarchicalFunction__debug, None, HierarchicalFunction)
HierarchicalFunction_swigregister = _function.HierarchicalFunction_swigregister
HierarchicalFunction_swigregister(HierarchicalFunction)

class GenericFunction(ufc_function, common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _function.delete_GenericFunction

    def value_rank(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_value_rank(self)


    def value_dimension(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_value_dimension(self, i)


    def eval_cell(self, values, x, cell):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_eval_cell(self, values, x, cell)


    def eval(self, values, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_eval(self, values, x)


    def restrict(self, w, element, dolfin_cell, coordinate_dofs, ufc_cell):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_restrict(self, w, element, dolfin_cell, coordinate_dofs, ufc_cell)


    def compute_vertex_values(self, mesh):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_compute_vertex_values(self, mesh)


    def update(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_update(self)


    def value_size(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction_value_size(self)


    def _function_space(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.GenericFunction__function_space(self)

GenericFunction.value_rank = new_instancemethod(_function.GenericFunction_value_rank, None, GenericFunction)
GenericFunction.value_dimension = new_instancemethod(_function.GenericFunction_value_dimension, None, GenericFunction)
GenericFunction.eval_cell = new_instancemethod(_function.GenericFunction_eval_cell, None, GenericFunction)
GenericFunction.eval = new_instancemethod(_function.GenericFunction_eval, None, GenericFunction)
GenericFunction.restrict = new_instancemethod(_function.GenericFunction_restrict, None, GenericFunction)
GenericFunction.compute_vertex_values = new_instancemethod(_function.GenericFunction_compute_vertex_values, None, GenericFunction)
GenericFunction.update = new_instancemethod(_function.GenericFunction_update, None, GenericFunction)
GenericFunction.value_size = new_instancemethod(_function.GenericFunction_value_size, None, GenericFunction)
GenericFunction._function_space = new_instancemethod(_function.GenericFunction__function_space, None, GenericFunction)
GenericFunction_swigregister = _function.GenericFunction_swigregister
GenericFunction_swigregister(GenericFunction)

class Expression(GenericFunction):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        if self.__class__ == Expression:
            _self = None
        else:
            _self = self
        _function.Expression_swiginit(self, _function.new_Expression(_self, *args))
    __swig_destroy__ = _function.delete_Expression

    def eval_cell(self, values, x, cell):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Expression_eval_cell(self, values, x, cell)


    def eval(self, values, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Expression_eval(self, values, x)

    def __disown__(self):
        self.this.disown()
        _function.disown_Expression(self)
        return weakref_proxy(self)
Expression.eval_cell = new_instancemethod(_function.Expression_eval_cell, None, Expression)
Expression.eval = new_instancemethod(_function.Expression_eval, None, Expression)
Expression_swigregister = _function.Expression_swigregister
Expression_swigregister(Expression)

class FunctionAXPY(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Direction_ADD_ADD = _function.FunctionAXPY_Direction_ADD_ADD
    Direction_SUB_ADD = _function.FunctionAXPY_Direction_SUB_ADD
    Direction_ADD_SUB = _function.FunctionAXPY_Direction_ADD_SUB
    Direction_SUB_SUB = _function.FunctionAXPY_Direction_SUB_SUB

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.FunctionAXPY_swiginit(self, _function.new_FunctionAXPY(*args))
    __swig_destroy__ = _function.delete_FunctionAXPY

    def __add__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionAXPY___add__(self, *args)


    def __sub__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionAXPY___sub__(self, *args)


    def __mul__(self, scale):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionAXPY___mul__(self, scale)


    def __truediv__(self, value):
        """self.__truediv__(value) <==> self/value"""
        return _function.FunctionAXPY___truediv__(self, value)
    __div__ = __truediv__


FunctionAXPY.__add__ = new_instancemethod(_function.FunctionAXPY___add__, None, FunctionAXPY)
FunctionAXPY.__sub__ = new_instancemethod(_function.FunctionAXPY___sub__, None, FunctionAXPY)
FunctionAXPY.__mul__ = new_instancemethod(_function.FunctionAXPY___mul__, None, FunctionAXPY)
FunctionAXPY_swigregister = _function.FunctionAXPY_swigregister
FunctionAXPY_swigregister(FunctionAXPY)

class Function(GenericFunction, HierarchicalFunction):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.Function_swiginit(self, _function.new_Function(*args))
    __swig_destroy__ = _function.delete_Function

    def _assign(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function__assign(self, *args)


    def sub(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_sub(self, i)


    def vector(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_vector(self, *args)


    def _in(self, V):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function__in(self, V)


    def geometric_dimension(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_geometric_dimension(self)


    def eval(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_eval(self, *args)


    def interpolate(self, v):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_interpolate(self, v)


    def extrapolate(self, v):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_extrapolate(self, v)


    def compute_vertex_values(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_compute_vertex_values(self, *args)


    def set_allow_extrapolation(self, allow_extrapolation):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_set_allow_extrapolation(self, allow_extrapolation)


    def get_allow_extrapolation(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Function_get_allow_extrapolation(self)


    def function_space(self):
        "Return the FunctionSpace"
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(self._function_space())

    def copy(self, deepcopy=False):
        """
        Return a copy of itself

        *Arguments*
            deepcopy (bool)
                If false (default) the dof vector is shared.

        *Returns*
             _Function_
                 The Function

        """
        from dolfin.functions.function import Function
        if deepcopy:
            return Function(self.function_space(), self.vector().copy())
        return Function(self.function_space(), self.vector())

    def leaf_node(self):
        "Return the finest Function in hierarchy"
        from dolfin.functions.function import Function
        return Function(HierarchicalFunction._leaf_node(self))

    def root_node(self):
        "Return the coarsest Function in hierarchy"
        from dolfin.functions.function import Function
        return Function(HierarchicalFunction._root_node(self))

    def child(self):
        "Return the child Function in the hierarchy"
        from dolfin.functions.function import Function
        return Function(HierarchicalFunction._child(self))

    def parent(self):
        "Return the parent Function in the hierarchy"
        from dolfin.functions.function import Function
        return Function(HierarchicalFunction._parent(self))

Function._assign = new_instancemethod(_function.Function__assign, None, Function)
Function.sub = new_instancemethod(_function.Function_sub, None, Function)
Function.vector = new_instancemethod(_function.Function_vector, None, Function)
Function._in = new_instancemethod(_function.Function__in, None, Function)
Function.geometric_dimension = new_instancemethod(_function.Function_geometric_dimension, None, Function)
Function.eval = new_instancemethod(_function.Function_eval, None, Function)
Function.interpolate = new_instancemethod(_function.Function_interpolate, None, Function)
Function.extrapolate = new_instancemethod(_function.Function_extrapolate, None, Function)
Function.compute_vertex_values = new_instancemethod(_function.Function_compute_vertex_values, None, Function)
Function.set_allow_extrapolation = new_instancemethod(_function.Function_set_allow_extrapolation, None, Function)
Function.get_allow_extrapolation = new_instancemethod(_function.Function_get_allow_extrapolation, None, Function)
Function_swigregister = _function.Function_swigregister
Function_swigregister(Function)

class FunctionSpace(common.Variable, HierarchicalFunctionSpace):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.FunctionSpace_swiginit(self, _function.new_FunctionSpace(*args))
    __swig_destroy__ = _function.delete_FunctionSpace

    def assign(self, V):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_assign(self, V)


    def __eq__(self, V):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace___eq__(self, V)


    def __ne__(self, V):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace___ne__(self, V)


    def mesh(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_mesh(self)


    def element(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_element(self)


    def dofmap(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_dofmap(self)


    def dim(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_dim(self)


    def interpolate(self, expansion_coefficients, v):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_interpolate(self, expansion_coefficients, v)


    def sub(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_sub(self, *args)


    def extract_sub_space(self, component):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_extract_sub_space(self, component)


    def contains(self, V):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_contains(self, V)


    def collapse(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_collapse(self)


    def has_cell(self, cell):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_has_cell(self, cell)


    def has_element(self, element):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_has_element(self, element)


    def component(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_component(self)


    def tabulate_dof_coordinates(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_tabulate_dof_coordinates(self)


    def set_x(self, x, value, component):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_set_x(self, x, value, component)


    def print_dofmap(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionSpace_print_dofmap(self)


    def __contains__(self,u):
        "Check whether a function is in the FunctionSpace"
        if isinstance(u, Function):
            return u._in(self)
        return False

    def leaf_node(self):
        "Return the finest FunctionSpace in hierarchy"
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(HierarchicalFunctionSpace._leaf_node(self))

    def root_node(self):
        "Return the coarsest FunctionSpace in hierarchy"
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(HierarchicalFunctionSpace._root_node(self))

    def child(self):
        "Return the child FunctionSpace in the hierarchy"
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(HierarchicalFunctionSpace._child(self))

    def parent(self):
        "Return the parent FunctionSpace in the hierarchy"
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(HierarchicalFunctionSpace._parent(self))


FunctionSpace.assign = new_instancemethod(_function.FunctionSpace_assign, None, FunctionSpace)
FunctionSpace.__eq__ = new_instancemethod(_function.FunctionSpace___eq__, None, FunctionSpace)
FunctionSpace.__ne__ = new_instancemethod(_function.FunctionSpace___ne__, None, FunctionSpace)
FunctionSpace.mesh = new_instancemethod(_function.FunctionSpace_mesh, None, FunctionSpace)
FunctionSpace.element = new_instancemethod(_function.FunctionSpace_element, None, FunctionSpace)
FunctionSpace.dofmap = new_instancemethod(_function.FunctionSpace_dofmap, None, FunctionSpace)
FunctionSpace.dim = new_instancemethod(_function.FunctionSpace_dim, None, FunctionSpace)
FunctionSpace.interpolate = new_instancemethod(_function.FunctionSpace_interpolate, None, FunctionSpace)
FunctionSpace.sub = new_instancemethod(_function.FunctionSpace_sub, None, FunctionSpace)
FunctionSpace.extract_sub_space = new_instancemethod(_function.FunctionSpace_extract_sub_space, None, FunctionSpace)
FunctionSpace.contains = new_instancemethod(_function.FunctionSpace_contains, None, FunctionSpace)
FunctionSpace.collapse = new_instancemethod(_function.FunctionSpace_collapse, None, FunctionSpace)
FunctionSpace.has_cell = new_instancemethod(_function.FunctionSpace_has_cell, None, FunctionSpace)
FunctionSpace.has_element = new_instancemethod(_function.FunctionSpace_has_element, None, FunctionSpace)
FunctionSpace.component = new_instancemethod(_function.FunctionSpace_component, None, FunctionSpace)
FunctionSpace.tabulate_dof_coordinates = new_instancemethod(_function.FunctionSpace_tabulate_dof_coordinates, None, FunctionSpace)
FunctionSpace.set_x = new_instancemethod(_function.FunctionSpace_set_x, None, FunctionSpace)
FunctionSpace.print_dofmap = new_instancemethod(_function.FunctionSpace_print_dofmap, None, FunctionSpace)
FunctionSpace_swigregister = _function.FunctionSpace_swigregister
FunctionSpace_swigregister(FunctionSpace)

class Constant(Expression):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.Constant_swiginit(self, _function.new_Constant(*args))
    __swig_destroy__ = _function.delete_Constant

    def assign(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Constant_assign(self, *args)


    def __float__(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Constant___float__(self)


    def values(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Constant_values(self)

Constant.assign = new_instancemethod(_function.Constant_assign, None, Constant)
Constant.__float__ = new_instancemethod(_function.Constant___float__, None, Constant)
Constant.values = new_instancemethod(_function.Constant_values, None, Constant)
Constant_swigregister = _function.Constant_swigregister
Constant_swigregister(Constant)

class MeshCoordinates(Expression):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, mesh):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.MeshCoordinates_swiginit(self, _function.new_MeshCoordinates(mesh))
    __swig_destroy__ = _function.delete_MeshCoordinates
MeshCoordinates_swigregister = _function.MeshCoordinates_swigregister
MeshCoordinates_swigregister(MeshCoordinates)

class FacetArea(Expression):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, mesh):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.FacetArea_swiginit(self, _function.new_FacetArea(mesh))
    __swig_destroy__ = _function.delete_FacetArea
FacetArea_swigregister = _function.FacetArea_swigregister
FacetArea_swigregister(FacetArea)

class SpecialFacetFunction(Expression):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.SpecialFacetFunction_swiginit(self, _function.new_SpecialFacetFunction(*args))

    def _sub(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.SpecialFacetFunction__sub(self, i)

    __swig_destroy__ = _function.delete_SpecialFacetFunction
SpecialFacetFunction._sub = new_instancemethod(_function.SpecialFacetFunction__sub, None, SpecialFacetFunction)
SpecialFacetFunction_swigregister = _function.SpecialFacetFunction_swigregister
SpecialFacetFunction_swigregister(SpecialFacetFunction)

class MultiMeshFunction(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.MultiMeshFunction_swiginit(self, _function.new_MultiMeshFunction(*args))
    __swig_destroy__ = _function.delete_MultiMeshFunction

    def part(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunction_part(self, i)


    def vector(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunction_vector(self, *args)


    def function_space(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunction_function_space(self)



    def copy(self, deepcopy=False):
        """
        Return a copy of itself

        *Arguments*
            deepcopy (bool)
                If false (default) the dof vector is shared.

        *Returns*
             _MultiMeshFunction_
                 The MultiMeshFunction

        """
        from dolfin.functions.multimeshfunction import MultiMeshFunction
        if deepcopy:
            return MultiMeshFunction(self.function_space(), self.vector().copy())
        return MultiMeshFunction(self.function_space(), self.vector())

MultiMeshFunction.part = new_instancemethod(_function.MultiMeshFunction_part, None, MultiMeshFunction)
MultiMeshFunction.vector = new_instancemethod(_function.MultiMeshFunction_vector, None, MultiMeshFunction)
MultiMeshFunction.function_space = new_instancemethod(_function.MultiMeshFunction_function_space, None, MultiMeshFunction)
MultiMeshFunction_swigregister = _function.MultiMeshFunction_swigregister
MultiMeshFunction_swigregister(MultiMeshFunction)

class MultiMeshFunctionSpace(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, multimesh):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.MultiMeshFunctionSpace_swiginit(self, _function.new_MultiMeshFunctionSpace(multimesh))
    __swig_destroy__ = _function.delete_MultiMeshFunctionSpace

    def dim(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_dim(self)


    def multimesh(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_multimesh(self)


    def dofmap(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_dofmap(self)


    def num_parts(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_num_parts(self)


    def part(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_part(self, i)


    def view(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_view(self, i)


    def add(self, function_space):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_add(self, function_space)


    def build(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MultiMeshFunctionSpace_build(self, *args)

MultiMeshFunctionSpace.dim = new_instancemethod(_function.MultiMeshFunctionSpace_dim, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace.multimesh = new_instancemethod(_function.MultiMeshFunctionSpace_multimesh, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace.dofmap = new_instancemethod(_function.MultiMeshFunctionSpace_dofmap, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace.num_parts = new_instancemethod(_function.MultiMeshFunctionSpace_num_parts, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace.part = new_instancemethod(_function.MultiMeshFunctionSpace_part, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace.view = new_instancemethod(_function.MultiMeshFunctionSpace_view, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace.add = new_instancemethod(_function.MultiMeshFunctionSpace_add, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace.build = new_instancemethod(_function.MultiMeshFunctionSpace_build, None, MultiMeshFunctionSpace)
MultiMeshFunctionSpace_swigregister = _function.MultiMeshFunctionSpace_swigregister
MultiMeshFunctionSpace_swigregister(MultiMeshFunctionSpace)

class MultiMeshSubSpace(MultiMeshFunctionSpace):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.MultiMeshSubSpace_swiginit(self, _function.new_MultiMeshSubSpace(*args))
    __swig_destroy__ = _function.delete_MultiMeshSubSpace
MultiMeshSubSpace_swigregister = _function.MultiMeshSubSpace_swigregister
MultiMeshSubSpace_swigregister(MultiMeshSubSpace)

class FunctionAssigner(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.FunctionAssigner_swiginit(self, _function.new_FunctionAssigner(*args))

    def assign(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionAssigner_assign(self, *args)

    __swig_destroy__ = _function.delete_FunctionAssigner

    def num_assigning_functions(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionAssigner_num_assigning_functions(self)


    def num_receiving_functions(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.FunctionAssigner_num_receiving_functions(self)

FunctionAssigner.assign = new_instancemethod(_function.FunctionAssigner_assign, None, FunctionAssigner)
FunctionAssigner.num_assigning_functions = new_instancemethod(_function.FunctionAssigner_num_assigning_functions, None, FunctionAssigner)
FunctionAssigner.num_receiving_functions = new_instancemethod(_function.FunctionAssigner_num_receiving_functions, None, FunctionAssigner)
FunctionAssigner_swigregister = _function.FunctionAssigner_swigregister
FunctionAssigner_swigregister(FunctionAssigner)


def assign(*args):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.assign(*args)
class LagrangeInterpolator(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def interpolate(*args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.LagrangeInterpolator_interpolate(*args)

    interpolate = staticmethod(interpolate)

    def __init__(self):
        _function.LagrangeInterpolator_swiginit(self, _function.new_LagrangeInterpolator())
    __swig_destroy__ = _function.delete_LagrangeInterpolator
LagrangeInterpolator_swigregister = _function.LagrangeInterpolator_swigregister
LagrangeInterpolator_swigregister(LagrangeInterpolator)

def LagrangeInterpolator_interpolate(*args):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.LagrangeInterpolator_interpolate(*args)


def ipow(a, n):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.ipow(a, n)

def rand():
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.rand()

def seed(s):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.seed(s)

def near(x, x0, eps=3.0e-16):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.near(x, x0, eps)

def between(x, range):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.between(x, range)
class Lagrange(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.Lagrange_swiginit(self, _function.new_Lagrange(*args))

    def set(self, i, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Lagrange_set(self, i, x)


    def size(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Lagrange_size(self)


    def degree(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Lagrange_degree(self)


    def point(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Lagrange_point(self, i)


    def eval(self, i, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Lagrange_eval(self, i, x)


    def ddx(self, i, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Lagrange_ddx(self, i, x)


    def dqdx(self, i):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Lagrange_dqdx(self, i)

    __swig_destroy__ = _function.delete_Lagrange
Lagrange.set = new_instancemethod(_function.Lagrange_set, None, Lagrange)
Lagrange.size = new_instancemethod(_function.Lagrange_size, None, Lagrange)
Lagrange.degree = new_instancemethod(_function.Lagrange_degree, None, Lagrange)
Lagrange.point = new_instancemethod(_function.Lagrange_point, None, Lagrange)
Lagrange.__call__ = new_instancemethod(_function.Lagrange___call__, None, Lagrange)
Lagrange.eval = new_instancemethod(_function.Lagrange_eval, None, Lagrange)
Lagrange.ddx = new_instancemethod(_function.Lagrange_ddx, None, Lagrange)
Lagrange.dqdx = new_instancemethod(_function.Lagrange_dqdx, None, Lagrange)
Lagrange_swigregister = _function.Lagrange_swigregister
Lagrange_swigregister(Lagrange)

class Legendre(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def eval(n, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Legendre_eval(n, x)

    eval = staticmethod(eval)

    def ddx(n, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Legendre_ddx(n, x)

    ddx = staticmethod(ddx)

    def d2dx(n, x):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.Legendre_d2dx(n, x)

    d2dx = staticmethod(d2dx)

    def __init__(self):
        _function.Legendre_swiginit(self, _function.new_Legendre())
    __swig_destroy__ = _function.delete_Legendre
Legendre_swigregister = _function.Legendre_swigregister
Legendre_swigregister(Legendre)

def Legendre_eval(n, x):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.Legendre_eval(n, x)

def Legendre_ddx(n, x):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.Legendre_ddx(n, x)

def Legendre_d2dx(n, x):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.Legendre_d2dx(n, x)

class ALE(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def move(*args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.ALE_move(*args)

    move = staticmethod(move)

    def __init__(self):
        _function.ALE_swiginit(self, _function.new_ALE())
    __swig_destroy__ = _function.delete_ALE
ALE_swigregister = _function.ALE_swigregister
ALE_swigregister(ALE)

def ALE_move(*args):
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _function.ALE_move(*args)

class MeshDisplacement(Expression):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _function.MeshDisplacement_swiginit(self, _function.new_MeshDisplacement(*args))
    __swig_destroy__ = _function.delete_MeshDisplacement

    def sub(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _function.MeshDisplacement_sub(self, *args)

MeshDisplacement.sub = new_instancemethod(_function.MeshDisplacement_sub, None, MeshDisplacement)
MeshDisplacement_swigregister = _function.MeshDisplacement_swigregister
MeshDisplacement_swigregister(MeshDisplacement)



